// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Accounts {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String     @id @default(cuid()) @map("_id")
  username       String     @unique
  email          String     @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  accounts       Accounts[]
  sessions       Session[]
  Post           Post[]
  Comment        Comment[]
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id    String  @id @default(uuid()) @map("_id")
  slug  String  @unique
  title String
  image String?
  Posts Post[]
}

model Post {
  id        String    @id @default(uuid()) @map("_id")
  createdAt DateTime  @default(now())
  slug      String    @unique
  title     String
  desc      String
  price     Int
  image     String?
  views     Int       @default(0)
  catSlug   String
  cat       Category  @relation(fields: [catSlug], references: [slug])
  userName  String
  user      User      @relation(fields: [userName], references: [username])
  comments  Comment[]
}

model Comment {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  desc      String
  userName  String
  user      User     @relation(fields: [userName], references: [username])
  postSlug  String
  post      Post     @relation(fields: [postSlug], references: [slug])
}
